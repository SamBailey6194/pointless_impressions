# ---------- Stage 1: Build JS and CSS ----------
FROM node:24-bookworm-slim AS node_builder
WORKDIR /app

# Copy Node package files and install dependencies (including dev dependencies for build)
COPY pointless_impressions_src/theme/static_src/package*.json ./
RUN npm ci

# Copy theme source files and build assets
COPY pointless_impressions_src/theme/ ./theme/
WORKDIR /app/theme/static_src
RUN npm run build && \
    echo "Build completed, checking output:" && \
    ls -la ../../ && \
    find /app -name "*.css" -o -name "*.js" | head -10

# ---------- Stage 2: Python + Django ----------
FROM python:3.13-slim-bookworm

ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1

WORKDIR /app

RUN apt-get update && apt-get install -y \
    curl \
    netcat-openbsd \
    gcc \
    libpq-dev \
    nodejs \
    npm \
    && rm -rf /var/lib/apt/lists/*

# UV for faster pip
COPY --from=ghcr.io/astral-sh/uv:latest /uv /uvx /bin/

# Install Python dependencies
COPY requirements.txt .
RUN uv pip install --upgrade pip --system && \
    uv pip install -r requirements.txt --system

# Copy Django project
COPY pointless_impressions_src/ ./pointless_impressions_src/
COPY manage.py .

# Copy built static files from Node stage
COPY --from=node_builder /app/static/ ./pointless_impressions_src/theme/static/

# Ensure all files are owned by the app user before switching
RUN useradd -m appuser && \
    chown -R appuser:appuser /app

# Make entrypoint executable before switching user
RUN chmod +x ./pointless_impressions_src/staging-entrypoint.sh

# Switch to non-root user
USER appuser

EXPOSE 8000
HEALTHCHECK CMD curl -f http://localhost:8000/health/ || exit 1

CMD ["/app/pointless_impressions_src/staging-entrypoint.sh"]