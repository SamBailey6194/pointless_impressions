# ---------- Stage 1: Build JS ----------
FROM node:24-bookworm-slim AS node_builder
WORKDIR /app

# Copy Node package files and install dependencies
COPY pointless_impressions_src/theme/static_src/package*.json ./
RUN npm ci --omit=dev

# Copy theme source files (for Django Tailwind to build)
COPY pointless_impressions_src/theme/static_src/ ./theme/static_src/

# ---------- Stage 2: Python + Django ----------
FROM python:3.13-slim-bookworm

ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1

WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    curl netcat-openbsd gcc libpq-dev \
    && rm -rf /var/lib/apt/lists/*

# UV for faster pip
COPY --from=ghcr.io/astral-sh/uv:latest /uv /uvx /bin/

# Install Python dependencies
COPY requirements.txt .
RUN uv pip install --upgrade pip --system && \
    uv pip install -r requirements.txt --system -- --root-user-action=ignore

# Copy Django project
COPY pointless_impressions_src/ ./pointless_impressions_src/
COPY manage.py .

# Copy theme source from Node stage (includes node_modules)
COPY --from=node_builder /app/theme/static_src/ ./pointless_impressions_src/theme/static_src/

# Build both CSS and JS via Django Tailwind (as root for permissions)
RUN python manage.py tailwind install
RUN python manage.py tailwind build

# Ensure all files are owned by the app user before switching
RUN useradd -m appuser && \
    chown -R appuser:appuser /app

# Make entrypoint executable before switching user
RUN chmod +x ./pointless_impressions_src/staging-entrypoint.sh

# Switch to non-root user
USER appuser

EXPOSE 8000
HEALTHCHECK CMD curl -f http://localhost:8000/health/ || exit 1

CMD ["/app/pointless_impressions_src/staging-entrypoint.sh"]